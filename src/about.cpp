/* - Editar en resolucion 43x50 porque en 80x25 no se ve un cuerno.
 * - No sebarse con los colores que indicen algo distinto de -1 en la
 *   paleta (transparente) porque se buelve lento en maquinas viejas...
 * - Acordarse de cuantas lineas y puntos tiene el pixmap y ponerlo vien
 *   porque sino, no anda...
 */

#include <about.h>
#include <iglu/qpixmap.h>
#include <iglu/tlabel.h>
#include <iglu/tprogram.h>

char pal [] = { -1,0 };

char *pixmapabout = /*
-123456789-123456789-123456789-123456789-123456789-123456789-1234-(64)*/
"0000000000000000010000000000000000000000000000000000001100000000" // 1
"0000000000000000100000000000000000000000000000000000011100000000" // 2
"0000000000000000100000000000000000000000000000000000111110000000" // 3
"0000000000000000100000000000000000000000000000000011111110000000" // 4
"0000000000000001000000000000000000000000000000011111111111000000" // 5
"0000000000111111111111111111110000000000000111111111111111000000" // 6
"0000001111000000000000000000000001111111111111111111111111000000" // 7
"0001110000000000000000000000000000000000000000000011111111110000" // 8
"0110000001111111111110000000000000000000000000000000000000001100" // 9
"1000001111111111111111111110000000000000000000000000000000000011" // 10
"0011111111111110000011111111111100000000000000000000000000000000" // 11
"1111111111111110000000000000000011111111111110000000000000000000" //  2
"1111111111111110111111111111111100001111111111111111111111111110" //  3
"1111111111111111111000000000111110000001111111111111111111111111" //  4
"1111111111111111111111111111111111000000001111111111111111111111" //  5
"1111111111111111100010011110011111100000011111111111111111111111" //  6
"0001111111111110010010111110011111110000110110000000001111111111" //  7
"0000001111111110000001111100111000111000110000111111111111111111" //  8
"0000000000111110000000000000000000011000100011000000111111111100" //  9
"0000000000000010000000000000000000011000000000011110001111100000" // 20
"0000000000000010000000000000000000011000000000000000011111100000" //  1
"0000000000000010001100000000000000011000000000000000001111100000" //  2
"0000000000000010001100000000000000011000000000000000000111100000" //  3
"0000000000000001001100000000000000011000000000000000000011100000" //  4
"0000000000000001011110000000000000111000000000000000000011000000" //  5
"0000000000000001011111000000000000111000000000000000000011000000" //  6
"0000000000000001111111100000000000111000000000000000000011000000" //  7
"0000000000000011000001110000000001111000000000000000000111000000" //  8
"0000000000000100111111011000000001111000010000000000000111000000" //  9
"0000000000001001000001101100000001111000011000000000001111000000" // 30
"0000000000001010111110111100000011111000011000000000001111000000" //  1
"0000000000001101111111011100000011111000000000000000011111000000" //  2
"0000000000001101110011011100000011111000000010000000011111000000" //  3
"0000000000001101100001011100000011111100001100000000011111000000" //  4
"0000000000001101111001011100000001111111110000000000011110000000" //  5
"0000000000001010111110111100000000011111100000000000011110000000" //  6
"0000000000001001000001111100000000000000000000000000011110000000" //  7
"0000000000001000111111101100000000000000100000000000011110000000" //  8
"0000000000011100011111011110000000000011000000000000011110000000" //  9
"0000000001100010000000111001111000000000000000001000011100000000" // 40
"0001111110000011000001111000000101111111111110001100111100000000" //  1
"1110000100000010111111111110000011111111111111111100111100000000" //  2
"0011111111111111111111111111000001000000000000001000111000000000" //  3
"0100000000000000101110111111100000100000000000000001111000000000" //  4
"1000000000000000101110011111110000011111111100000001110000000000" //  5
"1000100000000000101110011111111100001111100000000001111000000000" //  6
"1000110000000000100110011111111100001000000000000011100100000000" //  7
"1001111000000000100110111111111110001000000000000111100010000000" //  8
"0111111111111111100111111111111110001000000000001111100001000000" //  9
"0011111111111111110111111111111110001000000000011111000001000000" // 50
"0000111111111111111111111111111110001000000000111111000001100000" //  1
"0001000000000000000000000000111100010000000001111110000011110000" //  2
"0001000000000000000000000011111100010000000011111110000111001000" //  3
"0001000000000000000000001111111100010000000111000111001000001100" //  4
"0011000000000000000000001111111000111111111111000011010000011110" //  5
"0100110000000000000000111111111000101111100011100011000000111101" //  6
"1000001111111111111111111111111000101111000001110001100001111000" //  7
"0000010000000000000000000000110001001110000000110001100010001100" //  8
"0000100000000000000000000011110001000110001000010001100000000110" //  9
"0000100000000000000000000111110001000100001001001001100000000011" // 60
"0000100000000000000000001111110001000100001001000000100000000001" //  1
"0000010000000000000000111111101110000000010001000001100111111000" //  2
"0000001111111111111111111111011100010000010011100011111000000110" //  3
"0000001000000000000000011101111100100000000011000110000011000001" //  4
"0000001000000000000000011101111101000001100111111111111100011001" //  5
"0000001000000000000000111101111111111110001111111100000000000101" //  6
"0000000010000000000011111011111001111111111111111000000000000000" //  7
"0000000001111111111111110111110000111110000000011111110000000000" //  8
"0000000000001111111111111111100000001111111110000000111111100000" //  9
"0000000000000000000000000000000000000011111111110000000001111111" // 70
"0000000000000000000000000000000000000000111111111100000000000111" // 71
;

AboutOneSHOT::AboutOneSHOT(): TWindow(Rect(0,0,300,140), "About this")
{
  minimumSize = QPoint( Bounds.deltax(), Bounds.deltay() );
  QRect a, r( Bounds );
  r.centeron (Application->Bounds, 1);
  moverel( r.a.x, r.a.y );

  getClientArea (a);

  r = TRect (0,0,64,71);
  r.move (2, (a.deltay()-r.deltay())/2);
  QPixmap *px = new QPixmap (r, pal, pixmapabout, EGA_WHITE);
  px->Align = vaFixedSize+vaLeft+vaTop+vaPreservGapL+vaPreservGapT;
  px->State &=~ stFocusheable;

  r = TRect (r.b.x, a.a.y, a.b.x, a.b.y);
  TLabel *lb = new TLabel (r,
	"\nOne-Shot: Digital circuit\n"
	"simulator for DOS and X11\n"
	"\n"
	"Copyright (C) Martin\n"
	"Alejandro Ribelotta",
	EGA_BLACK, -1 );
//		EGA_WHITE, EGA_BLACK);
  lb->Align = vaRight+vaTop+vaFixedSize;
  lb->State &=~ stFocusheable;

  r = TRect( 0, 0, 80, 24 );
  r.moverel( a.deltax()-r.deltax()-32, a.deltay()-r.deltay()-16 );
  TTextButton *bOk = new TTextButton( r, "Ok", cmCancel );
  bOk->Align = vaBottom+vaRight+vaPreservGapB+vaPreservGapR+vaFixedSize;

  insert (lb);
  insert (px);
  insert (bOk);
  bOk->GotFocus();
}
